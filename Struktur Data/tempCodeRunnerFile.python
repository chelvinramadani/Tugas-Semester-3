import numpy as np

def gauss_jordan(a, b):
    n = len(b)
    # Membuat matriks augmented
    aug_matrix = np.hstack((a, b.reshape(-1, 1)))

    # Proses Gauss-Jordan
    for i in range(n):
        # Mencari elemen utama dan melakukan pembagian baris
        aug_matrix[i] = aug_matrix[i] / aug_matrix[i, i]
        for j in range(n):
            if i != j:
                # Mengeliminasi variabel di kolom ke-i untuk baris lain
                aug_matrix[j] = aug_matrix[j] - aug_matrix[j, i] * aug_matrix[i]
                
    # Mengambil hasil solusi dari kolom terakhir
    solution = aug_matrix[:, -1]
    return solution

# Matriks koefisien
a = np.array([[1, -1, 2, -1],
              [2, 1, -2, -2],
              [-1, 2, -4, 1],
              [3, 0, 0, -3]], dtype=float)

# Vektor konstanta
b = np.array([-1, -2, 1, -3], dtype=float)

# Memanggil fungsi gauss_jordan
solution = gauss_jordan(a, b)

# Menampilkan solusi
print("Solusi sistem persamaan linier adalah:")
for i, sol in enumerate(solution, 1):
    print(f"x{i} = {sol}")
